// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                  String   @id @default(uuid()) // شناسه یکتا
  fullname            String?
  email               String   @unique // ایمیل (یونیک)
  phone               String?  @unique // شماره تماس (اختیاری، یونیک)
  password            String // رمز عبور (هش‌شده)
  role                Role     @default(CUSTOMER) //نقش کاربر
  isActive            Boolean  @default(true) //فعال یا غیرفعال بودن حساب کاربر
  preferredLanguage   String?  @default("en") // یا zh
  createdAt           DateTime @default(now()) // تاریخ ایجاد حساب
  updatedAt           DateTime @updatedAt // تاریخ آخرین بروزرسانی

  profile             UserProfile?
  UserTransaction     Transaction[]
  bankAccounts        BankAccount[]
  UserActionLog       UserActionLog[]
}

enum Role {
  ADMIN
  OPERATOR
  CUSTOMER
}

model UserProfile {
  id       String  @id @default(uuid())
  userId   String  @unique
  avatar   String? // آواتار کاربر (اختیاری)
  address  String? // آدرس (اختیاری)
  bio      String? // بیوگرافی (اختیاری)
  whatsapp String? // شماره واتس‌اپ
  wechat   String? // آیدی وی‌چت

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Transaction {
  id        String   @id @default(uuid())
  userId    String
  amount    Float // مبلغ تراکنش
  type      String // نوع تراکنش (واریز / برداشت)
  status    String // وضعیت (موفق / ناموفق)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model BankAccount {
  id            String @id @default(uuid())
  userId        String
  bankName      String // نام بانک
  accountOwner  String // صاحب حساب
  accountNumber String @unique // شماره حساب
  iban          String @unique // شماره شبا
  cardNumber    String @unique // شماره کارت
  expiryYear    String // تاریخ انقضا (MM/YY)
  expiryMonth   String // تاریخ انقضا (MM/YY)
  cvv2          String // کد CVV2
  cardImage     String //تصویر کارت بانکی

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model CompanyInfo {
  id        String           @id @default(uuid())
  name      String
  slogan    String?
  logo      String?
  addresses CompanyAddress[]
  details   CompanyDetails?
}

model CompanyAddress {
  id        String      @id @default(uuid())
  companyId String
  company   CompanyInfo @relation(fields: [companyId], references: [id])
  address   String
  phone     String
  country   String
  email     String
  latitude  Float?
  longitude Float?
}

model FAQ {
  id       String @id @default(uuid())
  question String
  answer   String
}

model CompanyDetails {
  id            String      @id @default(uuid())
  companyId     String      @unique
  company       CompanyInfo @relation(fields: [companyId], references: [id])
  aboutUs       String
  contactUs     String
  services      String
  copyrightText String
}

model SliderImage {
  id          String   @id @default(uuid())
  title       String
  imageUrl    String
  description String?
  link        String?
  createdAt   DateTime @default(now())
  isActive    Boolean  @default(true)
}

model ExchangeRate {
  id           String   @id @default(uuid())
  currency     String
  basePrice    Float
  buyPrice     Float
  sellPrice    Float
  profitMargin Float
  createdAt    DateTime @default(now())
}

model UserActionLog {
  id          String   @id @default(uuid()) // شناسه یکتا
  userId      String // کد کاربر
  user        User     @relation(fields: [userId], references: [id]) // ارتباط یک به چند با مدل User
  action      String // نوع عملیات (ورود، سفارش، تغییر رمز و ...)
  description String? // توضیحات اضافه (اختیاری)
  date        DateTime @default(now()) // تاریخ و زمان عملیات
}

model Settings {
  id           Int   @id @default(autoincrement())
  profitMargin Float @default(0.5) // درصد سود (مثلاً 0.5 یعنی نیم درصد)
}
